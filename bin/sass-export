#!/usr/bin/env node

var sassExport = require('../dist').exporter;
var fs = require('fs');
var path = require('path');
var minimist = require('minimist');

var options = minimist(process.argv.slice(2), {
  alias: {
    o: 'outputDir',
    a: 'array',
    p: 'paths',
    h: 'help',
    v: 'version',
    d: 'detailed'
  }
});

var inputFiles = options._;

if (options.version) {
  console.log(require('../package.json').version);
  return;
}

if (!inputFiles.length || options.help) {
  fs.createReadStream(path.resolve(__dirname, 'help.txt'))
    .pipe(process.stdout)
    .on('close', () => {
      throw Error('Error reading help');
    });
  return;
}

if (!options.outputDir) {
  options.outputDir = './tokens/';
}
else if(options.outputDir[options.outputDir.length-1] !== '/') {
  options.outputDir += '/';
}

if(!fs.existsSync(options.outputDir)) {
  fs.mkdirSync(options.outputDir);
}

var includePaths = (options.paths || '').split(',');
var detailed = options.detailed;

inputFiles.forEach(f => {
  var exporter = sassExport({
    inputFiles: [f],
    includePaths,
    detailed
  });
  
  var outputJson = options.array ? exporter.getArray() : exporter.getStructured();
  
  outputJson = JSON.stringify(outputJson, null, 2);

  var idx = f.lastIndexOf('/');
  if(idx !== -1) {
    f = f.substr(idx+1, f.length);
  }
  
  var fileName = options.outputDir + f.replace(/\.\w+/g, '') + '.json';

  fs.writeFileSync(fileName, outputJson);
  
  console.log(`${fileName} was generated, go check it out!`);
});

